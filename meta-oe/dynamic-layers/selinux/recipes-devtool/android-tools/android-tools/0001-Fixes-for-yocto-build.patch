From 9d5bacfeedbc61dd07cca217111b3f0dd6837040 Mon Sep 17 00:00:00 2001
From: Etienne Cordonnier <ecordonnier@snap.com>
Date: Thu, 16 Mar 2023 18:59:35 +0100
Subject: [PATCH] Fixes for yocto build

Signed-off-by: JJ Robertson <jrobertson@snapchat.com>
[rebased on version 29]
Signed-off-by: Etienne Cordonnier <ecordonnier@snap.com>
---
 packages/modules/adb/daemon/file_sync_service.cpp | 4 ++--
 packages/modules/adb/daemon/framebuffer_service.h | 2 --
 packages/modules/adb/daemon/main.cpp              | 5 +++--
 packages/modules/adb/daemon/restart_service.h     | 2 --
 packages/modules/adb/daemon/services.cpp          | 6 ++----
 packages/modules/adb/daemon/shell_service.cpp     | 5 ++++-
 packages/modules/adb/types.h                      | 1 +
 7 files changed, 12 insertions(+), 13 deletions(-)

diff --git a/packages/modules/adb/daemon/file_sync_service.cpp b/packages/modules/adb/daemon/file_sync_service.cpp
index b59da972..c62869be 100644
--- a/packages/modules/adb/daemon/file_sync_service.cpp
+++ b/packages/modules/adb/daemon/file_sync_service.cpp
@@ -120,7 +120,7 @@ static bool secure_mkdirs(const std::string& path) {
         partial_path += path_component;
 
         if (should_use_fs_config(partial_path)) {
-            adbd_fs_config(partial_path.c_str(), 1, nullptr, &uid, &gid, &mode, &capabilities);
+            // adbd_fs_config(partial_path.c_str(), 1, nullptr, &uid, &gid, &mode, &capabilities);
         }
         if (adb_mkdir(partial_path.c_str(), mode) == -1) {
             if (errno != EEXIST) {
@@ -531,7 +531,7 @@ static bool send_impl(int s, const std::string& path, mode_t mode, CompressionTy
         gid_t gid = -1;
         uint64_t capabilities = 0;
         if (should_use_fs_config(path) && !dry_run) {
-            adbd_fs_config(path.c_str(), 0, nullptr, &uid, &gid, &mode, &capabilities);
+            // adbd_fs_config(path.c_str(), 0, nullptr, &uid, &gid, &mode, &capabilities);
         }
 
         result = handle_send_file(s, path.c_str(), &timestamp, uid, gid, capabilities, mode,
diff --git a/packages/modules/adb/daemon/framebuffer_service.h b/packages/modules/adb/daemon/framebuffer_service.h
index bab44be3..264da597 100644
--- a/packages/modules/adb/daemon/framebuffer_service.h
+++ b/packages/modules/adb/daemon/framebuffer_service.h
@@ -18,6 +18,4 @@
 
 #include "adb_unique_fd.h"
 
-#if defined(__ANDROID__)
 void framebuffer_service(unique_fd fd);
-#endif
diff --git a/packages/modules/adb/daemon/main.cpp b/packages/modules/adb/daemon/main.cpp
index 188272ae..0e01bde6 100644
--- a/packages/modules/adb/daemon/main.cpp
+++ b/packages/modules/adb/daemon/main.cpp
@@ -196,6 +196,9 @@ int adbd_main(int server_port) {
     umask(0);
 
     signal(SIGPIPE, SIG_IGN);
+    signal(SIGINT, SIG_DFL);
+    signal(SIGQUIT, SIG_DFL);
+
 
 #if defined(__BIONIC__)
     auto fdsan_level = android_fdsan_get_error_level();
@@ -251,13 +254,11 @@ int adbd_main(int server_port) {
 
     bool is_usb = false;
 
-#if defined(__ANDROID__)
     if (access(USB_FFS_ADB_EP0, F_OK) == 0) {
         // Listen on USB.
         usb_init();
         is_usb = true;
     }
-#endif
 
     // If one of these properties is set, also listen on that port.
     // If one of the properties isn't set and we couldn't listen on usb, listen
diff --git a/packages/modules/adb/daemon/restart_service.h b/packages/modules/adb/daemon/restart_service.h
index 19840bd5..7a97614b 100644
--- a/packages/modules/adb/daemon/restart_service.h
+++ b/packages/modules/adb/daemon/restart_service.h
@@ -18,9 +18,7 @@
 
 #include "adb_unique_fd.h"
 
-#if defined(__ANDROID__)
 void restart_root_service(unique_fd fd);
 void restart_unroot_service(unique_fd fd);
 void restart_tcp_service(unique_fd fd, int port);
 void restart_usb_service(unique_fd fd);
-#endif
diff --git a/packages/modules/adb/daemon/services.cpp b/packages/modules/adb/daemon/services.cpp
index afd89177..a991e53c 100644
--- a/packages/modules/adb/daemon/services.cpp
+++ b/packages/modules/adb/daemon/services.cpp
@@ -156,7 +156,7 @@ static void spin_service(unique_fd fd) {
     }
 #endif
     // Fall through
-    std::string cmd = "/system/bin/reboot ";
+    std::string cmd = "/sbin/reboot ";
     cmd += name;
     return StartSubprocess(cmd, nullptr, SubprocessType::kRaw, SubprocessProtocol::kNone);
 }
@@ -279,11 +279,10 @@ unique_fd daemon_service_to_fd(std::string_view name, atransport* transport) {
     }
 #endif
 
-#if defined(__ANDROID__)
     if (name.starts_with("framebuffer:")) {
         return create_service_thread("fb", framebuffer_service);
     } else if (android::base::ConsumePrefix(&name, "remount:")) {
-        std::string cmd = "/system/bin/remount ";
+        std::string cmd = "/sbin/remount ";
         cmd += name;
         return StartSubprocess(cmd, nullptr, SubprocessType::kRaw, SubprocessProtocol::kNone);
     } else if (android::base::ConsumePrefix(&name, "reboot:")) {
@@ -317,7 +316,6 @@ unique_fd daemon_service_to_fd(std::string_view name, atransport* transport) {
     } else if (name.starts_with("usb:")) {
         return create_service_thread("usb", restart_usb_service);
     }
-#endif
 
     if (android::base::ConsumePrefix(&name, "dev:")) {
         return unique_fd{unix_open(name, O_RDWR | O_CLOEXEC)};
diff --git a/packages/modules/adb/daemon/shell_service.cpp b/packages/modules/adb/daemon/shell_service.cpp
index dbca4adb..5ec0ae27 100644
--- a/packages/modules/adb/daemon/shell_service.cpp
+++ b/packages/modules/adb/daemon/shell_service.cpp
@@ -274,13 +274,16 @@ bool Subprocess::ForkAndExec(std::string* error) {
         env["HOSTNAME"] = GetHostName();
         env["LOGNAME"] = pw->pw_name;
         env["SHELL"] = pw->pw_shell;
-        env["TMPDIR"] = "/data/local/tmp";
         env["USER"] = pw->pw_name;
     }
 
     if (!terminal_type_.empty()) {
         env["TERM"] = terminal_type_;
     }
+    if (env.find("PS1") == env.end()) {
+        env["PS1"] = "\\h:\\w\\$ ";
+    }
+
 
     std::vector<std::string> joined_env;
     for (const auto& it : env) {
diff --git a/packages/modules/adb/types.h b/packages/modules/adb/types.h
index cd08ed8b..9f161989 100644
--- a/packages/modules/adb/types.h
+++ b/packages/modules/adb/types.h
@@ -22,6 +22,7 @@
 #include <memory>
 #include <utility>
 #include <vector>
+#include <string.h>
 
 #include <android-base/logging.h>
 
-- 
2.36.1.vfs.0.0

